{"version":3,"file":"index.js","sources":["src/actions.js","src/types/keyValue/keyValue.middleware.js","src/selectors.js","src/types/simpleObject/simpleObject.middleware.js","src/types/simpleObject/simpleObject.selectors.js","src/reducer.js","src/index.js"],"sourcesContent":["const scope = action => `@trampss/${action.toUpperCase()}`\n\nexport const SET = prefix => scope(`SET_${prefix}`)\nexport const set = prefix => payload => ({ type: SET(prefix), payload })\n\nexport const RESET = prefix => scope(`RESET_${prefix}`)\nexport const reset = prefix => () => ({ type: RESET(prefix) })\n\nexport const ADD = prefix => scope(`ADD_${prefix}`)\nexport const add = prefix => payload => ({ type: ADD(prefix), payload })\n\nexport const UPDATE = prefix => scope(`UPDATE_${prefix}`)\nexport const update = prefix => payload => ({ type: UPDATE(prefix), payload })\n\nexport const REMOVE = prefix => scope(`REMOVE_${prefix}`)\nexport const remove = prefix => key => ({ type: REMOVE(prefix), payload: key })\n\nexport const ADD_OR_UPDATE = prefix => scope(`ADD_OR_UPDATE_${prefix}`)\nexport const addOrUpdate = prefix => payload => ({ type: ADD_OR_UPDATE(prefix), payload })\n","import { keyBy, without, uniq, omit } from 'lodash'\nimport { SET, ADD, UPDATE, REMOVE, RESET, ADD_OR_UPDATE } from '../../actions'\n\nexport const initState = { data: {}, keys: [], array: [], initialized: false }\n\nconst keyAlreadyExists =\n  state => (key, instanceKey) => state.array.find(o => o[key] === instanceKey)\n\nconst add = (key, state, payload) => {\n  let array\n  const instanceKey = payload[key]\n  if (!keyAlreadyExists(state)(key, instanceKey)) {\n    array = [...state.array, payload]\n  } else {\n    array = state.array.map(o => (o[key] === instanceKey ? payload : o))\n  }\n\n  return {\n    ...state,\n    data: { ...state.data, [instanceKey]: payload },\n    keys: uniq([...state.keys, instanceKey]),\n    array,\n    initialized: true,\n  }\n}\n\nconst update = (key, state, payload) => {\n  const instanceKey = payload[key]\n\n  return {\n    ...state,\n    data: { ...state.data, [instanceKey]: { ...state.data[instanceKey], ...payload } },\n    array: state.array.map(o => (o[key] === instanceKey ? { ...o, ...payload } : o)),\n  }\n}\n\nconst reducer = key => prefix => (/* defaultData */) =>\n  (state = initState, { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return {\n          data: keyBy(payload, key),\n          keys: uniq(payload.map(element => element[key])),\n          array: payload,\n          initialized: true,\n        }\n      case ADD(prefix): return add(key, state, payload)\n      case ADD_OR_UPDATE(prefix): {\n        if (!keyAlreadyExists(state)(key, payload[key])) return add(key, state, payload)\n        return update(key, state, payload)\n      }\n      case UPDATE(prefix): {\n        if (!keyAlreadyExists(state)(key, payload[key])) return state\n        return update(key, state, payload)\n      }\n      case REMOVE(prefix):\n        return {\n          ...state,\n          data: omit(state.data, [payload]),\n          keys: without(state.keys, payload),\n          array: state.array ? state.array.filter(o => o[key] !== payload) : [],\n        }\n      case RESET(prefix):\n        return initState\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","import { at } from 'lodash'\n\nexport const getState = options => (state) => {\n  let subState = state\n  if (options.path !== undefined) subState = at(state, options.path)[0]\n\n  return subState[options.name]\n}\n\nconst getFactory = key => options => state => getState(options)(state)[key]\nexport const getKeys = getFactory('keys')\nexport const getAsArray = getFactory('array')\nexport const getLength = options => state => getKeys(options)(state).length\nexport const isInitialized = getFactory('initialized')\n\nconst getData = options => getFactory('data')(options)\nexport const get = options => keys => (state) => {\n  const data = getData(options)(state)\n  // All data\n  if (!keys) return data\n  // By keys\n  if (Array.isArray(keys)) return keys.map(k => data[k])\n  // By key\n  return data[keys]\n}\n\nexport const getBy = options => (propertyPath, values) => (state) => {\n  const data = getAsArray(options)(state)\n  if (Array.isArray(values)) return data.filter(d => values.includes(at(d, propertyPath)[0]))\n  return data.filter(d => values === at(d, propertyPath)[0])\n}\n","import { SET, RESET, UPDATE } from '../../actions'\n\nexport const initState = {}\nconst defaultState = defaultData => (defaultData !== undefined ? defaultData : initState)\n\nconst reducer = (/* key */) => prefix => defaultData =>\n  (state = defaultState(defaultData), { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return payload\n      case UPDATE(prefix):\n        return { ...state, ...payload }\n      case RESET(prefix):\n        return defaultState(defaultData)\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","import { initState } from './simpleObject.middleware'\nimport { getState } from '../../selectors'\n\nexport const get = options => () => state => getState(options)(state)\n\nexport const isInitialized = options => (state) => {\n  if (options.defaultData !== undefined) return getState(options)(state) !== options.defaultData\n  return get(options)()(state) !== initState\n}\n","export default middlewares => key => prefix => defaultData =>\n  (state, { type = 'UNKNOWN', payload } = {}) => {\n    let prevCtx = { state, action: { type, payload } }\n\n    // middlewares to call (in right order)\n    const middlewaresToCall = [\n      // injected by user\n      ...(middlewares.pre || []),\n      // injected by types selection (reducer type)\n      ...(middlewares.engine || []),\n      // injected by user\n      ...(middlewares.post || []),\n    ]\n\n    middlewaresToCall\n      // pass parameters\n      .map(middleware => middleware(key)(prefix)(defaultData))\n      // call middlewares\n      .forEach((middleware) => {\n        prevCtx = middleware(prevCtx)\n      })\n\n    // returns last results to Redux\n    return prevCtx.state\n  }\n","import * as types from './types'\nimport reducer from './reducer'\n\nconst getWrappedStore = (middlewares = {}) => (options) => {\n  const { key, type = 'keyValue', prefix = '', name, defaultData } = options\n  const typeConfig = types[type]\n\n  return Object.assign(\n    reducer({ ...middlewares, engine: typeConfig.middlewares })(key)(`${prefix}${name}`)(defaultData),\n\n    // type (debug purpose)\n    { trampssType: type },\n\n    // actions\n    ...Object.keys(typeConfig.actions).map(k => ({ [k]: typeConfig.actions[k](`${prefix}${name}`) })),\n\n    // selectors\n    ...Object.keys(typeConfig.selectors).map(k => ({ [k]: typeConfig.selectors[k](options) })),\n  )\n}\n\n// error :( - not a middleware nor an option parameter\nconst error = () => { throw Error('parameter is not a middleware configuration, nor a factory option object.') }\n\n// params checkers\nconst isMiddleware = params => params.engine || params.pre || params.post\nconst isOptions = params => (!!params.name) || (typeof params === 'string')\n\n// eslint-disable-next-line consistent-return\nconst factory = (forcedOptions = {}) => (params) => {\n  // no param : error\n  if (params === null || params === undefined) error()\n\n  // middleware case\n  if (isMiddleware(params)) {\n    return options => getWrappedStore(params)({ ...options, ...forcedOptions })\n  }\n  // no middleware case\n  if (isOptions(params)) {\n    if (typeof params === 'string') return getWrappedStore()({ name: params, ...forcedOptions })\n    return getWrappedStore()({ ...params, ...forcedOptions })\n  }\n\n  // not a valid param\n  error()\n}\n\nexport const simpleObject = factory({ type: 'simpleObject' })\nexport const keyValue = factory({ type: 'keyValue' })\n\n// default public factory\nexport default factory()\n"],"names":["scope","action","toUpperCase","SET","prefix","set","type","payload","RESET","reset","ADD","UPDATE","update","REMOVE","ADD_OR_UPDATE","initState","data","keys","array","initialized","keyAlreadyExists","key","instanceKey","state","find","o","add","map","_uniq","reducer","_keyBy","element","_omit","_without","filter","getState","subState","undefined","options","path","_at","name","getFactory","getKeys","getAsArray","isInitialized","getData","ctx","defaultData","length","Array","isArray","k","propertyPath","values","includes","d","defaultState","get","prevCtx","middlewares","pre","engine","post","middleware","forEach","getWrappedStore","typeConfig","types","Object","assign","trampssType","actions","selectors","error","Error","isMiddleware","params","isOptions","factory","forcedOptions","simpleObject","keyValue"],"mappings":"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"}