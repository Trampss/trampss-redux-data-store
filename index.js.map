{"version":3,"file":"index.js","sources":["src/actions.js","src/selectors.js","src/types/keyValue/keyValue.middleware.js","src/types/keyValue/index.js","src/types/simpleObject/simpleObject.middleware.js","src/types/simpleObject/simpleObject.selectors.js","src/types/simpleObject/index.js","src/reducer.js","src/index.js"],"sourcesContent":["const scope = action => `@trampss/${action.toUpperCase()}`\n\nexport const SET = prefix => scope(`SET_${prefix}`)\nexport const set = prefix => payload => ({ type: SET(prefix), payload })\n\nexport const RESET = prefix => scope(`RESET_${prefix}`)\nexport const reset = prefix => () => ({ type: RESET(prefix) })\n\nexport const ADD = prefix => scope(`ADD_${prefix}`)\nexport const add = prefix => payload => ({ type: ADD(prefix), payload })\n\nexport const UPDATE = prefix => scope(`UPDATE_${prefix}`)\nexport const update = prefix => payload => ({ type: UPDATE(prefix), payload })\n\nexport const REMOVE = prefix => scope(`REMOVE_${prefix}`)\nexport const remove = prefix => key => ({ type: REMOVE(prefix), payload: key })\n","import { at } from 'lodash'\n\nexport const getState = options => (state) => {\n  let subState = state\n  if (options.path !== undefined) subState = at(state, options.path)[0]\n\n  return subState[options.name]\n}\n\nconst getFactory = key => options => state => getState(options)(state)[key]\nexport const getKeys = getFactory('keys')\nexport const getAsArray = getFactory('array')\nexport const getLength = ({ path, name }) => state => getKeys({ path, name })(state).length\nexport const isInitialized = getFactory('initialized')\n\nexport const getData = options => getFactory('data')(options)\nexport const get = ({ path, name }) => keys => (state) => {\n  const data = getData({ path, name })(state)\n  // All data\n  if (!keys) return data\n  // By keys\n  if (Array.isArray(keys)) return keys.map(k => data[k])\n  // By key\n  return data[keys]\n}\n\nexport const getBy = ({ path, name }) => (propertyPath, values) => (state) => {\n  const data = getAsArray({ path, name })(state)\n  if (Array.isArray(values)) return data.filter(d => values.includes(at(d, propertyPath)[0]))\n  return data.filter(d => values === at(d, propertyPath)[0])\n}\n","import { keyBy, without, uniq, omit } from 'lodash'\nimport { SET, ADD, UPDATE, REMOVE, RESET } from '../../actions'\n\nexport const initState = { data: {}, keys: [], array: [], initialized: false }\n\nconst keyAlreadyExists =\n  state => (key, instanceKey) => state.array.find(o => o[key] === instanceKey)\n\nconst reducer = key => prefix => (/* defaultData */) =>\n  (state = initState, { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return {\n          data: keyBy(payload, key),\n          keys: uniq(payload.map(element => element[key])),\n          array: payload,\n          initialized: true,\n        }\n      case ADD(prefix): {\n        let array\n        const instanceKey = payload[key]\n        if (!keyAlreadyExists(state)(key, instanceKey)) {\n          array = [...state.array, payload]\n        } else {\n          array = state.array.map(o => (o[key] === instanceKey ? payload : o))\n        }\n\n        return {\n          ...state,\n          data: { ...state.data, [instanceKey]: payload },\n          keys: uniq([...state.keys, instanceKey]),\n          array,\n          initialized: true,\n        }\n      }\n      case UPDATE(prefix): {\n        const instanceKey = payload[key]\n        if (!keyAlreadyExists(state)(key, instanceKey)) return state\n        return {\n          ...state,\n          data: { ...state.data, [instanceKey]: { ...state.data[instanceKey], ...payload } },\n          array: state.array.map(o => (o[key] === instanceKey ? { ...o, ...payload } : o)),\n        }\n      }\n      case REMOVE(prefix):\n        return {\n          ...state,\n          data: omit(state.data, [payload]),\n          keys: without(state.keys, payload),\n          array: state.array ? state.array.filter(o => o[key] !== payload) : [],\n        }\n      case RESET(prefix):\n        return initState\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","import middleware from './keyValue.middleware'\n\nexport default {\n  middlewares: [middleware],\n  actions: ['set', 'add', 'reset', 'remove', 'update'],\n  selectorsEnabled: ['getState', 'getKeys', 'getAsArray', 'getLength', 'isInitialized', 'get', 'getBy'],\n}\n","import { SET, RESET, UPDATE } from '../../actions'\n\nexport const initState = {}\nconst reducer = (/* key */) => prefix => defaultData =>\n  (state = defaultData || initState, { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return {\n          data: payload,\n          initialized: true,\n        }\n      case UPDATE(prefix):\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            ...payload,\n          },\n        }\n      case RESET(prefix):\n        return defaultData || initState\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","/* eslint-disable import/prefer-default-export */\nimport { initState } from './simpleObject.middleware'\nimport { getState } from '../../selectors'\n\nexport const get = options => () => state => getState(options)(state)\n\nexport const isInitialized = options => (state) => {\n  if (options.defaultData !== undefined) return state[options.name] !== options.defaultData\n  return get(options)()(state) !== initState\n}\n","import middleware from './simpleObject.middleware'\nimport * as selectors from './simpleObject.selectors'\n\nexport default {\n  middlewares: [middleware],\n  actions: ['set', 'reset', 'update'],\n  selectorsEnabled: ['getState', 'isInitialized', 'get'],\n  selectors,\n}\n","export default middlewares => key => prefix => defaultData =>\n  (state, { type = 'UNKNOWN', payload } = {}) => {\n    let prevCtx = { state, action: { type, payload } }\n\n    // middlewares to call (in right order)\n    const middlewaresToCall = [\n      // injected by user\n      ...(middlewares.pre || []),\n      // injected by types selection (reducer type)\n      ...(middlewares.engine || []),\n      // injected by user\n      ...(middlewares.post || []),\n    ]\n\n    middlewaresToCall\n      // pass parameters\n      .map(middleware => middleware(key)(prefix)(defaultData))\n      // call middlewares\n      .forEach((middleware) => {\n        prevCtx = middleware(prevCtx)\n      })\n\n    // returns last results to Redux\n    return prevCtx.state\n  }\n","import * as actions from './actions'\nimport * as selectors from './selectors'\nimport * as types from './types'\nimport reducer from './reducer'\n\nconst getWrappedStore = (middlewares = {}) => (options) => {\n  const { key, type = 'keyValue', prefix = '', name, defaultData } = options\n  const typeConfig = types[type]\n\n  return Object.assign(\n    reducer({ ...middlewares, engine: typeConfig.middlewares })(key)(`${prefix}${name}`)(defaultData),\n\n    // type (debug purpose)\n    { trampssType: type },\n\n    // actions\n    ...Object.keys(actions)\n      .filter(k => typeConfig.actions.includes(k.toLowerCase()))\n      .map(k => ({ [k]: actions[k](`${prefix}${name}`) })),\n\n    // selectors\n    ...typeConfig.selectorsEnabled\n      .map((k) => {\n        const s = (typeConfig.selectors && typeConfig.selectors[k]) ?\n          typeConfig.selectors[k] : selectors[k]\n        return { [k]: s(options) }\n      }),\n  )\n}\n\n// error :( - not a middleware nor an option parameter\nconst error = () => { throw Error('parameter is not a middleware configuration, nor a factory option object.') }\n\n// params checkers\nconst isMiddleware = params => params.engine || params.pre || params.post\nconst isOptions = params => (!!params.name) || (typeof params === 'string')\n\n// eslint-disable-next-line consistent-return\nconst factory = (forcedOptions = {}) => (params) => {\n  // no param : error\n  if (params === null || params === undefined) error()\n\n  // middleware case\n  if (isMiddleware(params)) {\n    return options => getWrappedStore(params)({ ...options, ...forcedOptions })\n  }\n  // no middleware case\n  if (isOptions(params)) {\n    if (typeof params === 'string') return getWrappedStore()({ name: params, ...forcedOptions })\n    return getWrappedStore()({ ...params, ...forcedOptions })\n  }\n\n  // not a valid param\n  error()\n}\n\nexport const simpleObject = factory({ type: 'simpleObject' })\nexport const keyValue = factory({ type: 'keyValue' })\n\n// default public factory\nexport default factory()\n"],"names":["scope","action","toUpperCase","SET","prefix","RESET","ADD","UPDATE","REMOVE","type","payload","key","getState","state","subState","undefined","options","path","_at","name","getFactory","getKeys","getAsArray","isInitialized","getData","length","data","keys","Array","isArray","map","k","propertyPath","values","filter","includes","d","initState","array","initialized","keyAlreadyExists","instanceKey","find","o","reducer","_keyBy","_uniq","element","_omit","_without","ctx","defaultData","get","prevCtx","middlewares","pre","engine","post","middleware","forEach","getWrappedStore","typeConfig","types","Object","assign","trampssType","actions","toLowerCase","selectorsEnabled","s","selectors","error","Error","isMiddleware","params","isOptions","factory","forcedOptions","simpleObject","keyValue"],"mappings":"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"}