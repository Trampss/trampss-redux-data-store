{"version":3,"file":"index.js","sources":["src/actions.js","src/selectors.js","src/types/keyValue/keyValue.middleware.js","src/types/keyValue/index.js","src/types/simpleObject/simpleObject.middleware.js","src/types/simpleObject/index.js","src/reducer.js","src/index.js"],"sourcesContent":["const scope = action => `@trampss/${action.toUpperCase()}`\n\nexport const SET = prefix => scope(`SET_${prefix}`)\nexport const set = prefix => payload => ({ type: SET(prefix), payload })\n\nexport const RESET = prefix => scope(`RESET_${prefix}`)\nexport const reset = prefix => () => ({ type: RESET(prefix) })\n\nexport const ADD = prefix => scope(`ADD_${prefix}`)\nexport const add = prefix => payload => ({ type: ADD(prefix), payload })\n\nexport const UPDATE = prefix => scope(`UPDATE_${prefix}`)\nexport const update = prefix => payload => ({ type: UPDATE(prefix), payload })\n\nexport const REMOVE = prefix => scope(`REMOVE_${prefix}`)\nexport const remove = prefix => key => ({ type: REMOVE(prefix), payload: key })\n","import { at } from 'lodash'\n\nexport const getState = path => prefix => (state) => {\n  let subState = state\n  if (path !== undefined) subState = at(state, path)[0]\n\n  return subState[prefix]\n}\n\nconst getFactory = key => path => prefix => state => getState(path)(prefix)(state)[key]\nexport const getKeys = getFactory('keys')\nexport const getAsArray = getFactory('array')\nexport const getLength = path => prefix => state => getKeys(path)(prefix)(state).length\nexport const isInitialized = getFactory('initialized')\n\nconst getData = getFactory('data')\nexport const get = path => prefix => keys => (state) => {\n  const data = getData(path)(prefix)(state)\n  // All data\n  if (!keys) return data\n  // By keys\n  if (Array.isArray(keys)) return keys.map(k => data[k])\n  // By key\n  return data[keys]\n}\n\nexport const getBy = path => prefix => (propertyPath, values) => (state) => {\n  const data = getAsArray(path)(prefix)(state)\n  if (Array.isArray(values)) return data.filter(d => values.includes(at(d, propertyPath)[0]))\n  return data.filter(d => values === at(d, propertyPath)[0])\n}\n","import { keyBy, without, uniq, omit } from 'lodash'\nimport { SET, ADD, UPDATE, REMOVE, RESET } from '../../actions'\n\nexport const initState = { data: {}, keys: [], array: [], initialized: false }\n\nconst keyAlreadyExists =\n  state => (key, instanceKey) => state.array.find(o => o[key] === instanceKey)\n\nconst reducer = key => prefix => (/* defaultData */) =>\n  (state = initState, { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return {\n          data: keyBy(payload, key),\n          keys: uniq(payload.map(element => element[key])),\n          array: payload,\n          initialized: true,\n        }\n      case ADD(prefix): {\n        let array\n        const instanceKey = payload[key]\n        if (!keyAlreadyExists(state)(key, instanceKey)) {\n          array = [...state.array, payload]\n        } else {\n          array = state.array.map(o => (o[key] === instanceKey ? payload : o))\n        }\n\n        return {\n          ...state,\n          data: { ...state.data, [instanceKey]: payload },\n          keys: uniq([...state.keys, instanceKey]),\n          array,\n          initialized: true,\n        }\n      }\n      case UPDATE(prefix): {\n        const instanceKey = payload[key]\n        if (!keyAlreadyExists(state)(key, instanceKey)) return state\n        return {\n          ...state,\n          data: { ...state.data, [instanceKey]: { ...state.data[instanceKey], ...payload } },\n          array: state.array.map(o => (o[key] === instanceKey ? { ...o, ...payload } : o)),\n        }\n      }\n      case REMOVE(prefix):\n        return {\n          ...state,\n          data: omit(state.data, [payload]),\n          keys: without(state.keys, payload),\n          array: state.array ? state.array.filter(o => o[key] !== payload) : [],\n        }\n      case RESET(prefix):\n        return initState\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","import middleware from './keyValue.middleware'\n\nexport default {\n  middlewares: [middleware],\n  actions: ['set', 'add', 'reset', 'remove', 'update'],\n  selectors: ['getState', 'getKeys', 'getAsArray', 'getLength', 'isInitialized', 'get', 'getBy'],\n}\n","import { SET, RESET, UPDATE } from '../../actions'\n\nexport const initState = { data: undefined, initialized: false }\n\nconst init = defaultData => ({ ...initState, data: defaultData })\n\nconst reducer = (/* key */) => prefix => defaultData =>\n  (state = init(defaultData), { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return {\n          data: payload,\n          initialized: true,\n        }\n      case UPDATE(prefix):\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            ...payload,\n          },\n        }\n      case RESET(prefix):\n        return init(defaultData)\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","import middleware from './simpleObject.middleware'\n\nexport default {\n  middlewares: [middleware],\n  actions: ['set', 'reset', 'update'],\n  selectors: ['getState', 'isInitialized', 'get'],\n}\n","export default middlewares => key => prefix => defaultData =>\n  (state, { type = 'UNKNOWN', payload } = {}) => {\n    let prevCtx = { state, action: { type, payload } }\n\n    // middlewares to call (in right order)\n    const middlewaresToCall = [\n      // injected by user\n      ...(middlewares.pre || []),\n      // injected by types selection (reducer type)\n      ...(middlewares.engine || []),\n      // injected by user\n      ...(middlewares.post || []),\n    ]\n\n    middlewaresToCall\n      // pass parameters\n      .map(middleware => middleware(key)(prefix)(defaultData))\n      // call middlewares\n      .forEach((middleware) => {\n        prevCtx = middleware(prevCtx)\n      })\n\n    // returns last results to Redux\n    return prevCtx.state\n  }\n","import * as actions from './actions'\nimport * as selectors from './selectors'\nimport * as types from './types'\nimport reducer from './reducer'\n\nconst getWrappedStore = (middlewares = {}) => (options) => {\n  const { key, path, type = 'keyValue', prefix = '', name, defaultData } = options\n  const typeConfig = types[type]\n\n  return Object.assign(\n    reducer({ ...middlewares, engine: typeConfig.middlewares })(key)(`${prefix}${name}`)(defaultData),\n\n    // type (debug purpose)\n    { trampssType: type },\n\n    // actions\n    ...Object.keys(actions)\n      .filter(k => typeConfig.actions.includes(k.toLowerCase()))\n      .map(k => ({ [k]: actions[k](`${prefix}${name}`) })),\n\n    // selectors\n    ...Object.keys(selectors)\n      .filter(k => typeConfig.selectors.includes(k))\n      .map(k => ({ [k]: selectors[k](path)(name) })),\n  )\n}\n\n// error :( - not a middleware nor an option parameter\nconst error = () => { throw Error('parameter is not a middleware configuration, nor a factory option object.') }\n\n// params checkers\nconst isMiddleware = params => params.engine || params.pre || params.post\nconst isOptions = params => (!!params.name) || (typeof params === 'string')\n\n// eslint-disable-next-line consistent-return\nconst factory = (forcedOptions = {}) => (params) => {\n  // no param : error\n  if (params === null || params === undefined) error()\n\n  // middleware case\n  if (isMiddleware(params)) {\n    return options => getWrappedStore(params)({ ...options, ...forcedOptions })\n  }\n  // no middleware case\n  if (isOptions(params)) {\n    if (typeof params === 'string') return getWrappedStore()({ name: params, ...forcedOptions })\n    return getWrappedStore()({ ...params, ...forcedOptions })\n  }\n\n  // not a valid param\n  error()\n}\n\nexport const simpleObject = factory({ type: 'simpleObject' })\nexport const keyValue = factory({ type: 'keyValue' })\n\n// default public factory\nexport default factory()\n"],"names":["scope","action","toUpperCase","SET","prefix","RESET","ADD","UPDATE","REMOVE","type","payload","key","getState","state","subState","undefined","path","_at","getFactory","getKeys","getAsArray","isInitialized","getData","length","data","keys","Array","isArray","map","k","propertyPath","values","filter","includes","d","initState","array","initialized","keyAlreadyExists","instanceKey","find","o","reducer","_keyBy","_uniq","element","_omit","_without","ctx","defaultData","init","prevCtx","middlewares","pre","engine","post","middleware","forEach","getWrappedStore","options","name","typeConfig","types","Object","assign","trampssType","actions","toLowerCase","selectors","error","Error","isMiddleware","params","isOptions","factory","forcedOptions","simpleObject","keyValue"],"mappings":"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"}