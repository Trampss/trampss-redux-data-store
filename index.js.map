{"version":3,"file":"index.js","sources":["src/actions.js","src/types/keyValue/keyValue.middleware.js","src/selectors.js","src/types/simpleObject/simpleObject.middleware.js","src/types/simpleObject/simpleObject.selectors.js","src/reducer.js","src/index.js"],"sourcesContent":["const scope = action => `@trampss/${action.toUpperCase()}`\n\nexport const SET = prefix => scope(`SET_${prefix}`)\nexport const set = prefix => payload => ({ type: SET(prefix), payload })\n\nexport const RESET = prefix => scope(`RESET_${prefix}`)\nexport const reset = prefix => () => ({ type: RESET(prefix) })\n\nexport const ADD = prefix => scope(`ADD_${prefix}`)\nexport const add = prefix => payload => ({ type: ADD(prefix), payload })\n\nexport const UPDATE = prefix => scope(`UPDATE_${prefix}`)\nexport const update = prefix => payload => ({ type: UPDATE(prefix), payload })\n\nexport const REMOVE = prefix => scope(`REMOVE_${prefix}`)\nexport const remove = prefix => key => ({ type: REMOVE(prefix), payload: key })\n\nexport const ADD_OR_UPDATE = prefix => scope(`ADD_OR_UPDATE_${prefix}`)\nexport const addOrUpdate = prefix => payload => ({ type: ADD_OR_UPDATE(prefix), payload })\n\nexport const ORDER_BY = prefix => scope(`ORDER_BY_${prefix}`)\nexport const orderBy = prefix => payload => ({ type: ORDER_BY(prefix), payload })\n","import { keyBy, without, uniq, omit, orderBy, get, isObjectLike, isString, flatten } from 'lodash'\nimport { SET, ADD, UPDATE, REMOVE, RESET, ADD_OR_UPDATE, ORDER_BY } from '../../actions'\n\nexport const initState = { data: {}, keys: [], array: [], initialized: false }\n\nconst keyAlreadyExists =\n  state => (key, instanceKey) => state.array.find(o => o[key] === instanceKey)\n\nconst add = (key, state, payload) => {\n  let array\n  const instanceKey = payload[key]\n  if (!keyAlreadyExists(state)(key, instanceKey)) {\n    array = [...state.array, payload]\n  } else {\n    array = state.array.map(o => (o[key] === instanceKey ? payload : o))\n  }\n\n  return {\n    ...state,\n    data: { ...state.data, [instanceKey]: payload },\n    keys: uniq([...state.keys, instanceKey]),\n    array,\n    initialized: true,\n  }\n}\n\nconst update = (key, state, payload) => {\n  const instanceKey = payload[key]\n\n  return {\n    ...state,\n    data: { ...state.data, [instanceKey]: { ...state.data[instanceKey], ...payload } },\n    array: state.array.map(o => (o[key] === instanceKey ? { ...o, ...payload } : o)),\n  }\n}\n\nconst reducer = key => prefix => (/* defaultData */) =>\n  (state = initState, { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return {\n          data: keyBy(payload, key),\n          keys: uniq(payload.map(element => element[key])),\n          array: payload,\n          initialized: true,\n        }\n      case ADD(prefix): return add(key, state, payload)\n      case ADD_OR_UPDATE(prefix): {\n        if (!keyAlreadyExists(state)(key, payload[key])) return add(key, state, payload)\n        return update(key, state, payload)\n      }\n      case UPDATE(prefix): {\n        if (!keyAlreadyExists(state)(key, payload[key])) return state\n        return update(key, state, payload)\n      }\n      case ORDER_BY(prefix): {\n        let by = payload\n        let orders = 'asc'\n        if (isObjectLike(payload)) {\n          by = payload.by\n          orders = payload.desc ? 'desc' : 'asc'\n        }\n        const arraySorted = orderBy(\n          state.array,\n          isString(by) ? p => get(p, by) : by,\n          orders,\n        )\n        return {\n          ...state,\n          array: arraySorted,\n          keys: uniq(arraySorted.map(element => element[key])),\n        }\n      }\n      case REMOVE(prefix): {\n        const removeIds = flatten([payload])\n        return {\n          ...state,\n          data: omit(state.data, removeIds),\n          keys: without(state.keys, ...removeIds),\n          array: state.array ? state.array.filter(o => !removeIds.includes(o[key])) : [],\n        }\n      }\n      case RESET(prefix):\n        return initState\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","import { at } from 'lodash'\n\nexport const getState = options => (state) => {\n  let subState = state\n  if (options.path !== undefined) subState = at(state, options.path)[0]\n\n  return subState[options.name]\n}\n\nconst getFactory = key => options => state => getState(options)(state)[key]\nexport const getKeys = getFactory('keys')\nexport const getAsArray = getFactory('array')\nexport const getLength = options => state => getKeys(options)(state).length\nexport const isInitialized = getFactory('initialized')\n\nconst getData = options => getFactory('data')(options)\nexport const get = options => keys => (state) => {\n  const data = getData(options)(state)\n  // All data\n  if (!keys) return data\n  // By keys\n  if (Array.isArray(keys)) return keys.map(k => data[k])\n  // By key\n  return data[keys]\n}\n\nexport const getBy = options => (propertyPath, values) => (state) => {\n  const data = getAsArray(options)(state)\n  if (Array.isArray(values)) return data.filter(d => values.includes(at(d, propertyPath)[0]))\n  return data.filter(d => values === at(d, propertyPath)[0])\n}\n","import { SET, RESET, UPDATE } from '../../actions'\n\nexport const initState = {}\nconst defaultState = defaultData => (defaultData !== undefined ? defaultData : initState)\n\nconst reducer = (/* key */) => prefix => defaultData =>\n  (state = defaultState(defaultData), { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return payload\n      case UPDATE(prefix):\n        return { ...state, ...payload }\n      case RESET(prefix):\n        return defaultState(defaultData)\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(defaultData)(ctx.state, ctx.action),\n})\n","import { initState } from './simpleObject.middleware'\nimport { getState } from '../../selectors'\n\nexport const get = options => () => state => getState(options)(state)\n\nexport const isInitialized = options => (state) => {\n  if (options.defaultData !== undefined) return getState(options)(state) !== options.defaultData\n  return get(options)()(state) !== initState\n}\n","export default middlewares => key => prefix => defaultData =>\n  (state, { type = 'UNKNOWN', payload } = {}) => {\n    let prevCtx = { state, action: { type, payload } }\n\n    // middlewares to call (in right order)\n    const middlewaresToCall = [\n      // injected by user\n      ...(middlewares.pre || []),\n      // injected by types selection (reducer type)\n      ...(middlewares.engine || []),\n      // injected by user\n      ...(middlewares.post || []),\n    ]\n\n    middlewaresToCall\n      // pass parameters\n      .map(middleware => middleware(key)(prefix)(defaultData))\n      // call middlewares\n      .forEach((middleware) => {\n        prevCtx = middleware(prevCtx)\n      })\n\n    // returns last results to Redux\n    return prevCtx.state\n  }\n","import * as types from './types'\nimport reducer from './reducer'\n\nconst getWrappedStore = (middlewares = {}) => (options) => {\n  const { key, type = 'keyValue', prefix = '', name, defaultData } = options\n  const typeConfig = types[type]\n\n  return Object.assign(\n    reducer({ ...middlewares, engine: typeConfig.middlewares })(key)(`${prefix}${name}`)(defaultData),\n\n    // type (debug purpose)\n    { trampssType: type },\n\n    // actions\n    ...Object.keys(typeConfig.actions).map(k => ({ [k]: typeConfig.actions[k](`${prefix}${name}`) })),\n\n    // selectors\n    ...Object.keys(typeConfig.selectors).map(k => ({ [k]: typeConfig.selectors[k](options) })),\n  )\n}\n\n// error :( - not a middleware nor an option parameter\nconst error = () => { throw Error('parameter is not a middleware configuration, nor a factory option object.') }\n\n// params checkers\nconst isMiddleware = params => params.engine || params.pre || params.post\nconst isOptions = params => (!!params.name) || (typeof params === 'string')\n\n// eslint-disable-next-line consistent-return\nconst factory = (forcedOptions = {}) => (params) => {\n  // no param : error\n  if (params === null || params === undefined) error()\n\n  // middleware case\n  if (isMiddleware(params)) {\n    return options => getWrappedStore(params)({ ...options, ...forcedOptions })\n  }\n  // no middleware case\n  if (isOptions(params)) {\n    if (typeof params === 'string') return getWrappedStore()({ name: params, ...forcedOptions })\n    return getWrappedStore()({ ...params, ...forcedOptions })\n  }\n\n  // not a valid param\n  error()\n}\n\nexport const simpleObject = factory({ type: 'simpleObject' })\nexport const keyValue = factory({ type: 'keyValue' })\n\n// default public factory\nexport default factory()\n"],"names":["scope","action","toUpperCase","SET","prefix","set","type","payload","RESET","reset","ADD","UPDATE","update","REMOVE","ADD_OR_UPDATE","ORDER_BY","initState","data","keys","array","initialized","keyAlreadyExists","key","instanceKey","state","find","o","add","map","_uniq","reducer","_keyBy","element","by","orders","_isObjectLike","desc","arraySorted","_orderBy","_isString","_get","p","removeIds","_flatten","_omit","_without","filter","includes","getState","subState","undefined","options","path","_at","name","getFactory","getKeys","getAsArray","isInitialized","getData","ctx","defaultData","length","Array","isArray","k","propertyPath","values","d","defaultState","get","prevCtx","middlewares","pre","engine","post","middleware","forEach","getWrappedStore","typeConfig","types","Object","assign","trampssType","actions","selectors","error","Error","isMiddleware","params","isOptions","factory","forcedOptions","simpleObject","keyValue"],"mappings":"4iCAAA,IAAMA,EAAQ,8BAAsBC,EAAOC,eAE9BC,EAAM,mBAAUH,SAAaI,IAC7BC,EAAM,mBAAU,mBAAcC,KAAMH,EAAIC,GAASG,aAEjDC,EAAQ,mBAAUR,WAAeI,IACjCK,EAAQ,mBAAU,kBAASH,KAAME,EAAMJ,MAEvCM,EAAM,mBAAUV,SAAaI,IAG7BO,EAAS,mBAAUX,YAAgBI,IACnCQ,EAAS,mBAAU,mBAAcN,KAAMK,EAAOP,GAASG,aAEvDM,EAAS,mBAAUb,YAAgBI,IAGnCU,EAAgB,mBAAUd,mBAAuBI,IAGjDW,EAAW,mBAAUf,cAAkBI,0ZCjBvCY,GAAcC,QAAUC,QAAUC,SAAWC,aAAa,GAEjEC,EACJ,mBAAS,SAACC,EAAKC,UAAgBC,EAAML,MAAMM,KAAK,mBAAKC,EAAEJ,KAASC,MAE5DI,EAAM,SAACL,EAAKE,EAAOjB,OACnBY,SACEI,EAAchB,EAAQe,YACvBD,EAAiBG,GAAOF,EAAKC,GAGxBC,EAAML,MAAMS,IAAI,mBAAMF,EAAEJ,KAASC,EAAchB,EAAUmB,gBAFrDF,EAAML,QAAOZ,SAMtBiB,aACQA,EAAMP,UAAOM,EAAchB,SAChCsB,cAASL,EAAMN,OAAMK,0BAEd,KAIXX,EAAS,SAACU,EAAKE,EAAOjB,OACpBgB,EAAchB,EAAQe,eAGvBE,aACQA,EAAMP,UAAOM,OAAmBC,EAAMP,KAAKM,GAAiBhB,WAChEiB,EAAML,MAAMS,IAAI,mBAAMF,EAAEJ,KAASC,OAAmBG,EAAMnB,GAAYmB,OAI3EI,EAAU,mBAAO,mBAAU,iCAC9BN,yDAAQR,8DAAaV,IAAAA,KAAMC,IAAAA,eAClBD,QACDH,EAAIC,eAEC2B,EAAMxB,EAASe,QACfO,EAAKtB,EAAQqB,IAAI,mBAAWI,EAAQV,YACnCf,eACM,QAEZG,EAAIN,UAAgBuB,EAAIL,EAAKE,EAAOjB,QACpCO,EAAcV,UACZiB,EAAiBG,GAAOF,EAAKf,EAAQe,IACnCV,EAAOU,EAAKE,EAAOjB,GAD8BoB,EAAIL,EAAKE,EAAOjB,QAGrEI,EAAOP,UACLiB,EAAiBG,GAAOF,EAAKf,EAAQe,IACnCV,EAAOU,EAAKE,EAAOjB,GAD8BiB,OAGrDT,EAASX,OACR6B,EAAK1B,EACL2B,EAAS,MACTC,EAAa5B,OACVA,EAAQ0B,KACJ1B,EAAQ6B,KAAO,OAAS,WAE7BC,EAAcC,EAClBd,EAAML,MACNoB,EAASN,GAAM,mBAAKO,EAAIC,EAAGR,IAAMA,EACjCC,eAGGV,SACIa,OACDR,EAAKQ,EAAYT,IAAI,mBAAWI,EAAQV,aAG7CT,EAAOT,OACJsC,EAAYC,GAASpC,gBAEtBiB,QACGoB,EAAKpB,EAAMP,KAAMyB,QACjBG,gBAAQrB,EAAMN,eAASwB,WACtBlB,EAAML,MAAQK,EAAML,MAAM2B,OAAO,mBAAMJ,EAAUK,SAASrB,EAAEJ,gBAGlEd,EAAMJ,UACFY,iBAEAQ,wCD5EI,mBAAU,mBAAclB,KAAMI,EAAIN,GAASG,0CAMxC,mBAAU,mBAAUD,KAAMO,EAAOT,GAASG,QAASe,4CAG9C,mBAAU,mBAAchB,KAAMQ,EAAcV,GAASG,qCAGzD,mBAAU,mBAAcD,KAAMS,EAASX,GAASG,0BEnB1DyC,EAAW,mBAAW,SAACxB,OAC9ByB,EAAWzB,cACM0B,IAAjBC,EAAQC,OAAoBH,EAAWI,EAAG7B,EAAO2B,EAAQC,MAAM,IAE5DH,EAASE,EAAQG,QAGpBC,EAAa,mBAAO,mBAAW,mBAASP,EAASG,GAAS3B,GAAOF,MAC1DkC,EAAUD,EAAW,QACrBE,EAAaF,EAAW,SAExBG,EAAgBH,EAAW,eAElCI,EAAU,mBAAWJ,EAAW,QAAQJ,uCD0ExB,mBAAU,mBAAe,eAACS,wEAC3CA,SACI9B,EAAQR,GAAKlB,GAAQyD,GAAaD,EAAIpC,MAAOoC,EAAI3D,8FC/EjC,mBAAW,mBAASuD,EAAQL,GAAS3B,GAAOsC,6BAIlD,mBAAW,mBAAQ,SAACtC,OAC/BP,EAAO0C,EAAQR,GAAS3B,UAEzBN,EAED6C,MAAMC,QAAQ9C,GAAcA,EAAKU,IAAI,mBAAKX,EAAKgD,KAE5ChD,EAAKC,GAJMD,WAOC,mBAAW,SAACiD,EAAcC,UAAW,SAAC3C,OACnDP,EAAOwC,EAAWN,GAAS3B,UAC7BuC,MAAMC,QAAQG,GAAgBlD,EAAK6B,OAAO,mBAAKqB,EAAOpB,SAASM,EAAGe,EAAGF,GAAc,MAChFjD,EAAK6B,OAAO,mBAAKqB,IAAWd,EAAGe,EAAGF,GAAc,WC3B5ClD,KACPqD,EAAe,wBAAgCnB,IAAhBW,EAA4BA,EAAc7C,GAEzEc,EAAU,qCAAyB,mBACvC,eAACN,yDAAQ6C,EAAaR,+DAAgBvD,IAAAA,KAAMC,IAAAA,eAClCD,QACDH,EAAIC,UACAG,OACJI,EAAOP,eACEoB,EAAUjB,QACnBC,EAAMJ,UACFiE,EAAaR,kBAEbrC,OCZF8C,EAAM,mBAAW,kBAAM,mBAAStB,EAASG,GAAS3B,yCDgBzC,mBAAU,mBAAe,eAACoC,wEAC3CA,SACI9B,IAAa1B,GAAQyD,GAAaD,EAAIpC,MAAOoC,EAAI3D,mIChB7B,mBAAW,SAACuB,eACX0B,IAAxBC,EAAQU,YAAkCb,EAASG,GAAS3B,KAAW2B,EAAQU,YAC5ES,EAAInB,KAAW3B,KAAWR,yECPL,mBAAO,mBAAU,mBAC7C,SAACQ,uEAASlB,KACJiE,GAAY/C,QAAOvB,QAAUK,gBADlB,YACwBC,UADbA,4BAMpBiE,EAAYC,WAEZD,EAAYE,cAEZF,EAAYG,WAKf/C,IAAI,mBAAcgD,EAAWtD,GAAKlB,GAAQyD,KAE1CgB,QAAQ,SAACD,KACEA,EAAWL,KAIlBA,EAAQ/C,WCpBbsD,EAAkB,eAACN,mEAAqB,SAACrB,OACrC7B,EAA2D6B,EAA3D7B,MAA2D6B,EAAtD7C,KAAAA,aAAO,eAA+C6C,EAAnC/C,OAAAA,aAAS,KAAIkD,EAAsBH,EAAtBG,KAAMO,EAAgBV,EAAhBU,YAC7CkB,EAAaC,EAAM1E,UAElB2E,OAAOC,qBACZpD,OAAa0C,GAAaE,OAAQK,EAAWP,eAAelD,MAAQlB,EAASkD,GAAQO,IAGnFsB,YAAa7E,aAGZ2E,OAAO/D,KAAK6D,EAAWK,SAASxD,IAAI,wBAASqC,EAAIc,EAAWK,QAAQnB,MAAM7D,EAASkD,SAGnF2B,OAAO/D,KAAK6D,EAAWM,WAAWzD,IAAI,wBAASqC,EAAIc,EAAWM,UAAUpB,GAAGd,WAK5EmC,EAAQ,iBAAcC,MAAM,8EAG5BC,EAAe,mBAAUC,EAAOf,QAAUe,EAAOhB,KAAOgB,EAAOd,MAC/De,EAAY,oBAAaD,EAAOnC,MAA4B,iBAAXmC,GAGjDE,EAAU,eAACC,mEAAuB,SAACH,UAExB,OAAXA,QAA8BvC,IAAXuC,GAAsBH,IAGzCE,EAAaC,GACR,mBAAWX,EAAgBW,QAAatC,EAAYyC,KAGzDF,EAAUD,GACU,iBAAXA,EAA4BX,OAAoBxB,KAAMmC,GAAWG,IACrEd,SAAuBW,EAAWG,eAOhCC,EAAeF,GAAUrF,KAAM,iBAC/BwF,EAAWH,GAAUrF,KAAM,eAGzBqF"}