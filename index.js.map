{"version":3,"file":"index.js","sources":["src/actions.js","src/types/keyValue/keyValue.middleware.js","src/selectors.js","src/types/simpleObject/simpleObject.middleware.js","src/types/simpleObject/simpleObject.selectors.js","src/index.js","src/reducer.js"],"sourcesContent":["const scope = action => `@@krf/${action.toUpperCase()}`\n\nconst getPrefix = prefix => name => `${prefix ? '>' : ''}${prefix}>${name}`\n\nexport const SET = prefix => name => scope(`SET${getPrefix(prefix)(name)}`)\nexport const set = prefix => name => payload => ({ type: SET(prefix)(name), payload })\n\nexport const RESET = prefix => name => scope(`RESET${getPrefix(prefix)(name)}`)\nexport const reset = prefix => name => () => ({ type: RESET(prefix)(name) })\n\nexport const ADD = prefix => name => scope(`ADD${getPrefix(prefix)(name)}`)\nexport const add = prefix => name => payload => ({ type: ADD(prefix)(name), payload })\n\nexport const UPDATE = prefix => name => scope(`UPDATE${getPrefix(prefix)(name)}`)\nexport const update = prefix => name => payload => ({ type: UPDATE(prefix)(name), payload })\n\nexport const REMOVE = prefix => name => scope(`REMOVE${getPrefix(prefix)(name)}`)\nexport const remove = prefix => name => key => ({ type: REMOVE(prefix)(name), payload: key })\n\nexport const ADD_OR_UPDATE = prefix => name => scope(`ADD_OR_UPDATE${getPrefix(prefix)(name)}`)\nexport const addOrUpdate = prefix => name => payload => ({ type: ADD_OR_UPDATE(prefix)(name), payload })\n\nexport const REPLACE = prefix => name => scope(`REPLACE${getPrefix(prefix)(name)}`)\nexport const replace = prefix => name => payload => ({ type: REPLACE(prefix)(name), payload })\n\nexport const ORDER_BY = prefix => name => scope(`ORDER_BY${getPrefix(prefix)(name)}`)\nexport const orderBy = prefix => name => payload => ({ type: ORDER_BY(prefix)(name), payload })\n","import { keyBy, without, uniq, omit, orderBy, get, isObjectLike, isString, flatten } from 'lodash'\nimport { SET, ADD, UPDATE, REMOVE, RESET, ADD_OR_UPDATE, REPLACE, ORDER_BY } from './keyValue.actions'\n\nexport const initState = {\n  data: {},\n  keys: [],\n  array: [],\n  initialized: false,\n}\n\nconst keyAlreadyExists =\n  state => (key, instanceKey) => state.array.find(o => o[key] === instanceKey)\n\nconst set = (key, payload) => ({\n  data: keyBy(payload, key),\n  keys: uniq(payload.map(element => element[key])),\n  array: payload,\n  initialized: true,\n})\n\nconst add = (key, state, payload) => {\n  let array\n  const instanceKey = payload[key]\n  if (!keyAlreadyExists(state)(key, instanceKey)) {\n    array = [...state.array, payload]\n  } else {\n    array = state.array.map(o => (o[key] === instanceKey ? payload : o))\n  }\n\n  return {\n    ...state,\n    data: { ...state.data, [instanceKey]: payload },\n    keys: uniq([...state.keys, instanceKey]),\n    array,\n    initialized: true,\n  }\n}\n\nconst update = (key, state, payload) => {\n  const instanceKey = payload[key]\n\n  return {\n    ...state,\n    data: { ...state.data, [instanceKey]: { ...state.data[instanceKey], ...payload } },\n    array: state.array.map(o => (o[key] === instanceKey ? { ...o, ...payload } : o)),\n  }\n}\n\nconst replace = (key, state, payload) => {\n  const instanceKey = payload[key]\n\n  return {\n    ...state,\n    data: { ...state.data, [instanceKey]: payload },\n    array: state.array.map(o => (o[key] === instanceKey ? payload : o)),\n  }\n}\n\nconst defaultState =\n  (key, defaultData) => (defaultData !== undefined ? set(key, defaultData) : initState)\n\nconst reducer = key => prefix => name => defaultData =>\n  (state = defaultState(key, defaultData), { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix)(name): return set(key, payload)\n      case ADD(prefix)(name): return add(key, state, payload)\n      case ADD_OR_UPDATE(prefix)(name): {\n        if (!keyAlreadyExists(state)(key, payload[key])) return add(key, state, payload)\n        return update(key, state, payload)\n      }\n      case UPDATE(prefix)(name): {\n        if (!keyAlreadyExists(state)(key, payload[key])) return state\n        return update(key, state, payload)\n      }\n      case REPLACE(prefix)(name): {\n        if (!keyAlreadyExists(state)(key, payload[key])) return state\n        return replace(key, state, payload)\n      }\n      case ORDER_BY(prefix)(name): {\n        let by = payload\n        let orders = 'asc'\n        if (isObjectLike(payload)) {\n          by = payload.by // eslint-disable-line prefer-destructuring\n          orders = payload.desc ? 'desc' : 'asc'\n        }\n        const arraySorted = orderBy(\n          state.array,\n          isString(by) ? p => get(p, by) : by,\n          orders,\n        )\n        return {\n          ...state,\n          array: arraySorted,\n          keys: uniq(arraySorted.map(element => element[key])),\n        }\n      }\n      case REMOVE(prefix)(name): {\n        const removeIds = flatten([payload])\n        return {\n          ...state,\n          data: omit(state.data, removeIds),\n          keys: without(state.keys, ...removeIds),\n          array: state.array ? state.array.filter(o => !removeIds.includes(o[key])) : [],\n        }\n      }\n      case RESET(prefix)(name):\n        return defaultState(key, defaultData)\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => name => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(name)(defaultData)(ctx.state, ctx.action),\n})\n","import { at } from 'lodash'\n\nexport const getState = options => (state) => {\n  let subState = state\n  const { name, path } = options\n\n  if (path !== undefined && path.length > 0) [subState] = at(state, path)\n\n  return subState[name]\n}\n\nconst getFactory = key => options => state => getState(options)(state)[key]\nexport const getKeys = getFactory('keys')\nexport const getAsArray = getFactory('array')\nexport const getLength = options => state => getKeys(options)(state).length\nexport const isInitialized = getFactory('initialized')\n\nconst getData = options => getFactory('data')(options)\nexport const get = options => keys => (state) => {\n  const data = getData(options)(state)\n  // All data\n  if (keys === undefined || keys === null) return data\n  // By keys\n  if (Array.isArray(keys)) return keys.map(k => data[k])\n  // By key\n  return data[keys]\n}\n\nexport const getBy = options => (propertyPath, values) => (state) => {\n  const data = getAsArray(options)(state)\n  if (Array.isArray(values)) return data.filter(d => values.includes(at(d, propertyPath)[0]))\n  return data.filter(d => values === at(d, propertyPath)[0])\n}\n\nexport const hasKey = options => key => (state) => {\n  const keys = getKeys(options)(state)\n\n  return keys.includes(key)\n}\n","import { SET, RESET, UPDATE } from './simpleObject.actions'\n\nexport const initState = {}\nconst defaultState = defaultData => (defaultData !== undefined ? defaultData : initState)\n\nconst reducer = (/* key */) => prefix => name => defaultData =>\n  (state = defaultState(defaultData), { type, payload } = {}) => {\n    switch (type) {\n      case SET(prefix)(name):\n        return payload\n      case UPDATE(prefix)(name):\n        return { ...state, ...payload }\n      case RESET(prefix)(name):\n        return defaultState(defaultData)\n      default:\n        return state\n    }\n  }\n\nexport default key => prefix => name => defaultData => (ctx = {}) => ({\n  ...ctx,\n  state: reducer(key)(prefix)(name)(defaultData)(ctx.state, ctx.action),\n})\n","import { initState } from './simpleObject.middleware'\nimport { getState } from '../../selectors'\n\nexport const get = options => () => state => getState(options)(state)\n\nexport const isInitialized = options => (state) => {\n  if (options.defaultData !== undefined) return getState(options)(state) !== options.defaultData\n  return get(options)()(state) !== initState\n}\n","import * as types from './types'\nimport reducer from './reducer'\n\nconst getWrappedStore = (middlewares = {}) => (options) => {\n  const {\n    key,\n    type = 'keyValue',\n    prefix = '',\n    name,\n    defaultData,\n  } = options\n  const typeConfig = types[type]\n\n  return Object.assign(\n    reducer({ ...middlewares, engine: typeConfig.middlewares })(key)(prefix)(name)(defaultData),\n\n    // type (debug purpose)\n    { krfType: type },\n\n    // actions\n    ...Object.keys(typeConfig.actions).map(k => ({ [k]: typeConfig.actions[k](prefix)(name) })),\n\n    // selectors\n    ...Object.keys(typeConfig.selectors).map(k => ({ [k]: typeConfig.selectors[k](options) })),\n  )\n}\n\n// error :( - not a middleware nor an option parameter\nconst error = () => { throw Error('parameter is not a middleware configuration, nor a factory option object.') }\n\n// params checkers\nconst isMiddleware = params => params.engine || params.pre || params.post\nconst isOptions = params => (!!params.name) || (typeof params === 'string')\n\n// eslint-disable-next-line consistent-return\nconst factory = (forcedOptions = {}) => (params) => {\n  // no param : error\n  if (params === null || params === undefined) error()\n\n  // middleware case\n  if (isMiddleware(params)) {\n    return options => getWrappedStore(params)({ ...options, ...forcedOptions })\n  }\n  // no middleware case\n  if (isOptions(params)) {\n    if (typeof params === 'string') return getWrappedStore()({ name: params, ...forcedOptions })\n    return getWrappedStore()({ ...params, ...forcedOptions })\n  }\n\n  // not a valid param\n  error()\n}\n\nexport const simpleObject = factory({ type: 'simpleObject' })\nexport const keyValue = factory({ type: 'keyValue' })\n\n// default public factory\nexport default factory()\n","export default middlewares => key => prefix => name => defaultData =>\n  (state, { type = 'UNKNOWN', payload } = {}) => {\n    let prevCtx = { state, action: { type, payload } }\n\n    // middlewares to call (in right order)\n    const middlewaresToCall = [\n      // injected by user\n      ...(middlewares.pre || []),\n      // injected by types selection (reducer type)\n      ...(middlewares.engine || []),\n      // injected by user\n      ...(middlewares.post || []),\n    ]\n\n    middlewaresToCall\n      // pass parameters\n      .map(middleware => middleware(key)(prefix)(name)(defaultData))\n      // call middlewares\n      .forEach((middleware) => {\n        prevCtx = middleware(prevCtx)\n      })\n\n    // returns last results to Redux\n    return prevCtx.state\n  }\n"],"names":["scope","action","toUpperCase","getPrefix","prefix","name","SET","set","type","payload","RESET","reset","ADD","UPDATE","update","REMOVE","ADD_OR_UPDATE","REPLACE","ORDER_BY","key","initState","keyAlreadyExists","instanceKey","state","array","find","o","keyBy","uniq","map","element","add","data","keys","defaultState","defaultData","undefined","reducer","replace","by","orders","isObjectLike","desc","arraySorted","orderBy","isString","get","p","removeIds","flatten","omit","without","filter","includes","getState","subState","options","path","length","at","getFactory","getKeys","getAsArray","isInitialized","ctx","getData","Array","isArray","k","propertyPath","values","d","getWrappedStore","middlewares","typeConfig","types","Object","assign","prevCtx","pre","engine","post","middleware","forEach","krfType","actions","selectors","error","Error","factory","forcedOptions","params","isMiddleware","isOptions","simpleObject","keyValue"],"mappings":"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"}