{"version":3,"file":"index.js","sources":["src/actions.js","src/selectors.js","src/reducer.js","src/index.js"],"sourcesContent":["const scope = action => `@trampss/${action.toUpperCase()}`\n\nexport const SET = prefix => scope(`SET_${prefix}`)\nexport const set = prefix => payload => ({ type: SET(prefix), payload })\n\nexport const RESET = prefix => scope(`RESET_${prefix}`)\nexport const reset = prefix => () => ({ type: RESET(prefix) })\n\nexport const ADD = prefix => scope(`ADD_${prefix}`)\nexport const add = prefix => payload => ({ type: ADD(prefix), payload })\n\nexport const REMOVE = prefix => scope(`REMOVE_${prefix}`)\nexport const remove = prefix => key => ({ type: REMOVE(prefix), payload: key })\n","import { at } from 'lodash'\n\nexport const getState = path => prefix => (state) => {\n  let subState = state\n  if (path !== undefined) subState = at(state, path)[0]\n\n  return subState[prefix]\n}\n\nconst getFactory = key => path => prefix => state => getState(path)(prefix)(state)[key]\nexport const getKeys = getFactory('keys')\nexport const getAsArray = getFactory('array')\nexport const getLength = path => prefix => state => getKeys(path)(prefix)(state).length\nexport const isInitialized = getFactory('initialized')\n\nconst getData = getFactory('data')\nexport const get = path => prefix => keys => (state) => {\n  const data = getData(path)(prefix)(state)\n  // All data\n  if (!keys) return data\n  // By keys\n  if (Array.isArray(keys)) return keys.map(k => data[k])\n  // By key\n  return data[keys]\n}\n\nexport const getBy = path => prefix => (propertyPath, values) => (state) => {\n  const data = getAsArray(path)(prefix)(state)\n  if (Array.isArray(values)) return data.filter(d => values.includes(at(d, propertyPath)[0]))\n  return data.filter(d => values === at(d, propertyPath)[0])\n}\n","import { keyBy, without, uniq, omit } from 'lodash'\nimport { SET, ADD, REMOVE, RESET } from './actions'\n\nexport const initState = { data: {}, keys: [], array: [], initialized: false }\n\nexport default key => prefix =>\n  (state = initState, { type = 'UNKONWN', payload } = {}) => {\n    switch (type) {\n      case SET(prefix):\n        return {\n          data: keyBy(payload, key),\n          keys: payload.map(element => element[key]),\n          array: payload,\n          initialized: true,\n        }\n      case ADD(prefix):\n        return {\n          ...state,\n          data: { ...state.data, [payload[key]]: payload },\n          keys: uniq([...state.keys, payload[key]]),\n          array: [...state.array, payload],\n          initialized: true,\n        }\n      case REMOVE(prefix):\n        return {\n          ...state,\n          data: omit(state.data, [payload]),\n          keys: without(state.keys, payload),\n          array: state.array ? state.array.filter(o => o[key] !== payload) : [],\n        }\n      case RESET(prefix):\n        return initState\n      default:\n        return state\n    }\n  }\n","import * as actions from './actions'\nimport * as selectors from './selectors'\nimport reducer from './reducer'\n\nexport default key => path => prefix => Object.assign(\n  reducer(key)(prefix),\n  ...Object.keys(actions).map(k => ({ [k]: actions[k](prefix) })),\n  ...Object.keys(selectors).map(k => ({ [k]: selectors[k](path)(prefix) })),\n)\n"],"names":["scope","action","toUpperCase","SET","prefix","RESET","ADD","REMOVE","type","payload","key","getState","state","subState","undefined","path","_at","getFactory","getKeys","getAsArray","isInitialized","getData","length","data","keys","Array","isArray","map","k","propertyPath","values","filter","includes","d","initState","array","initialized","_keyBy","element","_uniq","_omit","_without","o","Object","assign","reducer","actions","selectors"],"mappings":"klBAAA,IAAMA,EAAQ,8BAAsBC,EAAOC,eAE9BC,EAAM,mBAAUH,SAAaI,IAG7BC,EAAQ,mBAAUL,WAAeI,IAGjCE,EAAM,mBAAUN,SAAaI,IAG7BG,EAAS,mBAAUP,YAAgBI,+BAR7B,mBAAU,mBAAcI,KAAML,EAAIC,GAASK,2BAGzC,mBAAU,kBAASD,KAAMH,EAAMD,gBAGjC,mBAAU,mBAAcI,KAAMF,EAAIF,GAASK,6BAGxC,mBAAU,mBAAUD,KAAMD,EAAOH,GAASK,QAASC,OCV5DC,EAAW,mBAAQ,mBAAU,SAACC,OACrCC,EAAWD,cACFE,IAATC,IAAoBF,EAAWG,EAAGJ,EAAOG,GAAM,IAE5CF,EAAST,MAGZa,EAAa,mBAAO,mBAAQ,mBAAU,mBAASN,EAASI,GAAMX,GAAQQ,GAAOF,OACtEQ,EAAUD,EAAW,QACrBE,EAAaF,EAAW,SAExBG,EAAgBH,EAAW,eAElCI,EAAUJ,EAAW,qEAHF,mBAAQ,mBAAU,mBAASC,EAAQH,GAAMX,GAAQQ,GAAOU,8BAI9D,mBAAQ,mBAAU,mBAAQ,SAACV,OACtCW,EAAOF,EAAQN,GAAMX,GAAQQ,UAE9BY,EAEDC,MAAMC,QAAQF,GAAcA,EAAKG,IAAI,mBAAKJ,EAAKK,KAE5CL,EAAKC,GAJMD,YAOC,mBAAQ,mBAAU,SAACM,EAAcC,UAAW,SAAClB,OAC1DW,EAAOJ,EAAWJ,GAAMX,GAAQQ,UAClCa,MAAMC,QAAQI,GAAgBP,EAAKQ,OAAO,mBAAKD,EAAOE,SAAShB,EAAGiB,EAAGJ,GAAc,MAChFN,EAAKQ,OAAO,mBAAKD,IAAWd,EAAGiB,EAAGJ,GAAc,iaC1B5CK,GAAcX,QAAUC,QAAUW,SAAWC,aAAa,wBAEjD,mBACpB,eAACxB,yDAAQsB,kEAAa1B,KAAAA,aAAO,YAAWC,IAAAA,eAC9BD,QACDL,EAAIC,eAECiC,EAAM5B,EAASC,QACfD,EAAQkB,IAAI,mBAAWW,EAAQ5B,WAC9BD,eACM,QAEZH,EAAIF,eAEFQ,aACQA,EAAMW,UAAOd,EAAQC,GAAOD,SACjC8B,cAAS3B,EAAMY,OAAMf,EAAQC,wBACxBE,EAAMuB,QAAO1B,iBACX,SAEZF,EAAOH,eAELQ,QACG4B,EAAK5B,EAAMW,MAAOd,SAClBgC,EAAQ7B,EAAMY,KAAMf,SACnBG,EAAMuB,MAAQvB,EAAMuB,MAAMJ,OAAO,mBAAKW,EAAEhC,KAASD,cAEvDJ,EAAMD,UACF8B,iBAEAtB,gCC7BO,mBAAQ,mBAAU+B,OAAOC,qBAC7CC,EAAQnC,GAAKN,aACVuC,OAAOnB,KAAKsB,GAASnB,IAAI,wBAASC,EAAIkB,EAAQlB,GAAGxB,SACjDuC,OAAOnB,KAAKuB,GAAWpB,IAAI,wBAASC,EAAImB,EAAUnB,GAAGb,GAAMX"}